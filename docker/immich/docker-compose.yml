version: "3.8"

networks:
  traefik:
    external: true
  immich:
    name: immich

services:
  immich-server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    command: ["start.sh", "immich"]
    networks:
      - traefik
      - immich
    volumes:
      - ${UPLOAD_LOCATION}:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - .env
    ports:
      - 2283:3001
    depends_on:
      - redis
      - database
    restart: always
    labels:
      traefik.enable: true
      traefik.docker.network: traefik
      traefik.http.routers.immich.rule: Host(`immich.circacerulean.net`)
      traefik.http.routers.immich.entrypoints: web,web-tls
      traefik.http.routers.immich.tls: true
      traefik.http.routers.immich.tls.certresolver: letsencrypt
      traefik.http.routers.immich.tls.domains[0].main: circacerulean.net
      traefik.http.routers.immich.tls.domains[0].sans: "*.circacerulean.net"
      traefik.http.services.immich.loadbalancer.server.port: 3001

  immich-microservices:
    container_name: immich_microservices
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    extends:
      file: hwaccel.yml
      service: hwaccel
    command: ["start.sh", "microservices"]
    networks:
      - immich
    volumes:
      - ${UPLOAD_LOCATION}:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - .env
    depends_on:
      - redis
      - database
    restart: always

  immich-machine-learning:
    container_name: immich_machine_learning
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
    networks:
      - immich
    volumes:
      - model-cache:/cache
    env_file:
      - .env
    restart: always

  redis:
    container_name: immich_redis
    image: redis:6.2-alpine@sha256:70a7a5b641117670beae0d80658430853896b5ef269ccf00d1827427e3263fa3
    restart: always
    networks:
      - immich

  database:
    container_name: immich_postgres
    image: tensorchord/pgvecto-rs:pg14-v0.1.11  
    networks:
      - immich
    env_file:
      - .env
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    restart: always

volumes:
  model-cache:
