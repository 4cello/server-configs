version: "3.9"

services:
  traefik:
    image: traefik:v2.10
    container_name: traefik
    restart: unless-stopped
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
    networks:
      - traefik
    ports:
      - 80:80
      - 443:443
      - 7125:7125
      - 8080:8080
    environment:
      CLOUDFLARE_EMAIL: ${CLOUDFLARE_EMAIL}
      CLOUDFLARE_API_KEY: ${CLOUDFLARE_API_KEY}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik.yml:/etc/traefik/traefik.yml
      - ./acme.json:/acme.json
      - ./dynamic-config:/dynamic-config
      - ./access.log:/var/log/traefik-access.log
    labels:
      traefik.enable: true
      traefik.http.routers.api.rule: Host(`traefik.circacerulean.net`)
      traefik.http.routers.api.entrypoints: web,web-tls
      traefik.http.routers.api.tls: true
      traefik.http.routers.api.tls.certresolver: letsencrypt
      traefik.http.routers.api.service: api@internal

  nginx-error:
    image: nginx:latest
    container_name: error-router-nginx
    networks:
      - traefik
    volumes:
      - ./error-pages:/usr/share/nginx/error-pages
      - ./nginx-error.conf:/etc/nginx/conf.d/default.conf
    labels:
      traefik.enable: true
      traefik.http.routers.error-router.rule: HostRegexp(`{host:.+}`)
      traefik.http.routers.error-router.priority: 1
      traefik.http.routers.error-router.entrypoints: web,web-tls
      traefik.http.routers.error-router.middlewares: error-pages-middleware
      traefik.http.middlewares.error-pages-middleware.errors.status: 400-599
      traefik.http.middlewares.error-pages-middleware.errors.service: error-pages-service
      traefik.http.middlewares.error-pages-middleware.errors.query: /{status}.html
      traefik.http.services.error-pages-service.loadbalancer.server.port: 80

networks:
  traefik:
    name: traefik
